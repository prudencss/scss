@use "../foundations/foundations__colors-neutral";
@use "../foundations/foundations__shadows";

@use "sass:color";
@use "sass:map";

/* -------------------------------------------------------------------------
 * SHADOWS
 *
 * Foundation shadows */

// Utility variables
// --------------------------------------------------

// Utility toggling

$u-shadows--enabled: true !default;

// Shadows maps

$u-shadows__maps: foundations__shadows.$f-shadows !default;
$u-shadows__maps--custom: foundations__shadows.$f-shadows--custom !default;

// Utilities output
// --------------------------------------------------

@if $u-shadows--enabled {
  @each $_shadow-name, $_shadow-value in $u-shadows__maps {
    .u-shadow--#{$_shadow-name}:not(.u-shadow__pseudo) {
      box-shadow: $_shadow-value color.scale(map.get(foundations__colors-neutral.$f-colors-neutral--bg, "secondary"), $alpha: -50%) !important;
      clip-path: unset !important;
    }
    .u-shadow--#{$_shadow-name}.u-shadow__pseudo {
      &::before {
        display: block;
        position: absolute;
        z-index: 0;
        border-radius: inherit;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        content: "";
        box-shadow: $_shadow-value color.scale(map.get(foundations__colors-neutral.$f-colors-neutral--bg, "secondary"), $alpha: -50%) !important;
      }
    }
  }

  @each $_custom-shadow, $_pseudoprops-map in $u-shadows__maps--custom {
    .u-shadow--custom-#{$_custom-shadow} {
      @if map.get($_pseudoprops-map, "before, after") {
        &::before,
        &::after {
          @each $_prop, $_val in map.get($_pseudoprops-map, "before, after") {
            #{$_prop}: $_val;
          }
        }
      }
      @if map.get($_pseudoprops-map, "before") {
        &::before {
          @each $_prop, $_val in map.get($_pseudoprops-map, "before") {
            #{$_prop}: $_val;
          }
        }
      }
      @if map.get($_pseudoprops-map, "after") {
        &::after {
          @each $_prop, $_val in map.get($_pseudoprops-map, "after") {
            #{$_prop}: $_val;
          }
        }
      }
    }
  }
}
