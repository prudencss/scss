@use "sass:color";

.c-btn {
  display: inline-block;
  vertical-align: middle;
  font: inherit;
  text-align: center;
  margin: 0;
  padding: $f-space--small $f-space--medium;
  background-color: $f-color__neutral-accent-bg;
  cursor: pointer;
  outline: none;
  border-style: solid;
  border-radius: $f-radius--medium;

  &:hover:not(.a-ripple),
  &:focus:not(.a-ripple) {
    background-color: color.scale($f-color__neutral-accent-bg, $lightness: if(color.lightness($f-color__neutral-accent-bg) > 50%, 17%, -17%));
  }

  &:active:not(.a-ripple) {
    background-color: color.scale($f-color__neutral-accent-bg, $lightness: if(color.lightness($f-color__neutral-accent-bg) > 50%, 33%, -33%));
  }


  // Branding Color Variants

  @each $_name, $_val in $f-colors-brand {
    &.c-btn--#{$_name} {
      background-color: $_val;
      color: map-get($f-colors-neutral, $_name);
      text-decoration: none;

      &:hover,
      &:focus,
      &:active {
        text-decoration: none;
        color: color.scale(map-get($f-colors-neutral, $_name), $lightness: if(color.lightness(map-get($f-colors-neutral, $_name)) > 50%, -17%, 17%));
      }

      &:hover,
      &:focus {
        &:not(.a-ripple) {
          background-color: color.scale($_val, $lightness: if(color.lightness($_val) > 50%, 33%, -33%));
        }
      }

      &:active:not(.a-ripple) {
        background-color: color.scale($_val, $lightness: if(color.lightness($_val) > 50%, 33%, -33%));
      }
    }
  }

  // State Color Variants

  @each $_name, $_val in $f-colors-state {
    &.c-btn--#{$_name} {
      background-color: $_val;
      color: $f-color__neutral-primary;
      text-decoration: none;

      &:hover,
      &:focus,
      &:active {
        text-decoration: none;
        color: color.scale($f-color__neutral-primary, $lightness: if(color.lightness($f-color__neutral-primary) > 50%, -17%, 17%));
      }

      &:hover,
      &:focus {
        &:not(.a-ripple) {
          background-color: color.scale($_val, $lightness: if(color.lightness($_val) > 50%, 33%, -33%));
        }
      }

      &:active:not(.a-ripple) {
        background-color: color.scale($_val, $lightness: if(color.lightness($_val) > 50%, 33%, -33%));
      }
    }
  }

  // Size variants

  @each $_name, $_val in s-core-map-diff(("none": $f-space--none), $f-spaces) {
    &.c-btn--#{$_name} {
      padding: $_val ($_val * 1.618);
      font-size: 1rem;

      &.c-btn--fab {
        padding: unset;
        width: calc(3rem + $_val);
        height: calc(3rem + $_val);
        font-size: calc(1rem + $_val);
        line-height: 1;
        clip-path: circle(calc((3rem + #{$_val}) / 2));
      }
    }
  }

  &.c-btn--ghost,
  &.c-btn--basic,
  &.c-btn--stroked {
    background-color: transparent;
  }

  &.c-btn--no-border,
  &.c-btn--basic,
  &.c-btn--fab,
  &.c-btn--flat {
    border: none;
  }

  &.c-btn--fab {
    border-radius: 50%;
    padding: unset;
    width: 3rem;
    height: 3rem;
  }
}
