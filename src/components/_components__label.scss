@use "../foundations/foundations__colors-brand";
@use "../foundations/foundations__colors-neutral";
@use "../foundations/foundations__colors-state";
@use "../foundations/foundations__positions";
@use "../foundations/foundations__radiuses";
@use "../foundations/foundations__spaces";
@use "../settings/core-functions/map-diff";
@forward "../utilities//utilities__arrows";

@use "sass:color";
@use "sass:map";

.c-label {
  display: inline-block;
  position: relative;
  vertical-align: middle;
  font: inherit;
  text-align: center;
  margin: 0;
  padding: foundations__spaces.$f-space--s foundations__spaces.$f-space--m;
  background-color: foundations__colors-neutral.$f-color__neutral--accent-bg;
  cursor: pointer;
  outline: none;
  border-color: inherit;
  border-style: solid;
  border-radius: foundations__radiuses.$f-radius--m;

  &:hover:not(.a-ripple),
  &:focus:not(.a-ripple) {
    background-color: color.scale(foundations__colors-neutral.$f-color__neutral--accent-bg, $lightness: if(color.lightness(foundations__colors-neutral.$f-color__neutral--accent-bg) > 50%, 17%, -17%));
  }

  &:active:not(.a-ripple) {
    background-color: color.scale(foundations__colors-neutral.$f-color__neutral--accent-bg, $lightness: if(color.lightness(foundations__colors-neutral.$f-color__neutral--accent-bg) > 50%, 33%, -33%));
  }


  // Branding Color Variants

  @each $_name, $_val in foundations__colors-brand.$f-colors-brand {
    &.c-label--#{$_name} {
      background-color: $_val;
      border-color: map.get(foundations__colors-neutral.$f-colors-neutral, $_name);
      color: map.get(foundations__colors-neutral.$f-colors-neutral, $_name);
      text-decoration: none;

      &:hover,
      &:focus,
      &:active {
        text-decoration: none;
        border-color: color.scale(map.get(foundations__colors-neutral.$f-colors-neutral, $_name), $lightness: if(color.lightness(map.get(foundations__colors-neutral.$f-colors-neutral, $_name)) > 50%, -17%, 17%));
        color: color.scale(map.get(foundations__colors-neutral.$f-colors-neutral, $_name), $lightness: if(color.lightness(map.get(foundations__colors-neutral.$f-colors-neutral, $_name)) > 50%, -17%, 17%));
      }

      &:hover,
      &:focus {
        &:not(.a-ripple) {
          background-color: color.scale($_val, $lightness: if(color.lightness($_val) > 50%, 33%, -33%));
        }
      }

      &:active:not(.a-ripple) {
        background-color: color.scale($_val, $lightness: if(color.lightness($_val) > 50%, 33%, -33%));
      }
    }
  }

  @each $_name, $_val in foundations__colors-neutral.$f-colors-neutral {
    $_bg-pendant: map.get(foundations__colors-neutral.$f-colors-neutral--bg, $_name);

    &.c-label--neutral-#{$_name} {
      background-color: $_bg-pendant;
      border-color: map.get(foundations__colors-neutral.$f-colors-neutral, $_name);
      color: map.get(foundations__colors-neutral.$f-colors-neutral, $_name);
      text-decoration: none;

      &:hover,
      &:focus,
      &:active {
        text-decoration: none;
        border-color: color.scale($_val, $lightness: if(color.lightness($_val) > 50%, -17%, 17%));
        color: color.scale($_val, $lightness: if(color.lightness($_val) > 50%, -17%, 17%));
      }

      &:hover,
      &:focus {
        &:not(.a-ripple) {
          background-color: color.scale($_val, $lightness: if(color.lightness($_bg-pendant) > 50%, 33%, -33%));
        }
      }

      &:active:not(.a-ripple) {
        background-color: color.scale($_val, $lightness: if(color.lightness($_bg-pendant) > 50%, 33%, -33%));
      }
    }
  }
  // State Color Variants

  @each $_name, $_val in foundations__colors-state.$f-colors-state {
    &.c-label--#{$_name} {
      background-color: $_val;
      color: foundations__colors-neutral.$f-color__neutral--primary;
      text-decoration: none;

      &:hover,
      &:focus,
      &:active {
        text-decoration: none;
        border-color: color.scale(foundations__colors-neutral.$f-color__neutral--primary, $lightness: if(color.lightness(foundations__colors-neutral.$f-color__neutral--primary) > 50%, -17%, 17%));
        color: color.scale(foundations__colors-neutral.$f-color__neutral--primary, $lightness: if(color.lightness(foundations__colors-neutral.$f-color__neutral--primary) > 50%, -17%, 17%));
      }

      &:hover,
      &:focus {
        &:not(.a-ripple) {
          background-color: color.scale($_val, $lightness: if(color.lightness($_val) > 50%, 33%, -33%));
        }
      }

      &:active:not(.a-ripple) {
        background-color: color.scale($_val, $lightness: if(color.lightness($_val) > 50%, 33%, -33%));
      }
    }
  }

  // Size variants

  @each $_name, $_val in map-diff.s-core-map-diff(("none": foundations__spaces.$f-space--none), foundations__spaces.$f-spaces) {
    &.c-label--#{$_name} {
      padding: calc(#{$_val} / 6) $_val;
      font-size: 1rem;

      &.c-label--fab {
        padding: unset;
        width: calc(3rem + $_val);
        height: calc(3rem + $_val);
        font-size: calc(1rem + $_val);
        line-height: 1;
        clip-path: circle(calc((3rem + #{$_val}) / 2));
      }
    }
  }

  // Pointing variants

  @each $_pos-name in foundations__positions.$f-positions__compass {
    &.c-label--arrow-#{$_pos-name} {
      border-color: inherit;

      @extend %#{u-arrow--#{$_pos-name}#{foundations__positions.$f-positions__separator}half};
    }

    @each $_fraction-name, $_fraction-val in foundations__positions.$f-positions__fractions {
      &.c-label--arrow-#{$_pos-name}#{foundations__positions.$f-positions__separator}#{$_fraction-name} {
        border-color: inherit;

        @extend %#{u-arrow--#{$_pos-name}#{foundations__positions.$f-positions__separator}#{$_fraction-name}};
      }
    }
  }

  &.c-label--ghost,
  &.c-label--basic,
  &.c-label--stroked {
    background-color: transparent;
  }

  &.c-label--no-border,
  &.c-label--basic,
  &.c-label--fab,
  &.c-label--flat {
    border: none;
  }

  &.c-label--fab {
    border-radius: 50%;
    padding: unset;
    width: 3rem;
    height: 3rem;
  }
}
