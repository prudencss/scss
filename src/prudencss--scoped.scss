@use "sass:meta";

/* -------------------------------------------------------------------------
 * CONFIG
 *
 * Main configuration, settings, foundations and tools. No CSS output from
 * them. Should be modified with caution. Values should be expressed in PX,
 * if you plan to convert them into relative units, please, do so on usage.
 *
 * settings ................... Main configuration, settings and core functions
 * foundations ................ Visual language expressed into SASS vars
 * tools ...................... Helper mixins for mq, quantities, ... */

@import "settings/settings__core";
@import "settings/settings__config";
@import "settings/settings__core-functions";
@import "foundations/foundations";
@import "tools/tools";

// Enable scoped flag
$s-config__scoped: true;

/* -------------------------------------------------------------------------
 * BASE
 *
 * Main HTML elements reset and setup, and base material
 *
 * generic .................... Normalize browser behaviour
 * elements ................... HTML elements default appearance
 * material ................... Class based elements: headings, icons, ... */

@import "generic/generic";
@import "elements/elements";
@import "material/material";

/* -------------------------------------------------------------------------
 * SCOPED CLASS AND CONTENT */

.s-#{$s-config__scope-selector} {

  /* -------------------------------------------------------------------------
   * ABSTRACTIONS
   *
   * Reusable design abstractions and patterns
   *
   * spacings ................... An abstraction about spaces
   * objects .................... Unstyled design patterns
   * animations ................. Movement and transition patterns
   * color-schemes .............. Color combination schemes
   * icons ...................... prudencss "3rd party" icons-library (fa, ...) integration
   * filters/svg-fx ............. prudencss "3rd party" svg-filters integration/collection */

  @include meta.load-css("spacings/spacings");
  @include meta.load-css("objects/objects");
  @include meta.load-css("animations/animations");
  @include meta.load-css("color-schemes/color-schemes");

  /* -------------------------------------------------------------------------
   * CONTENT
   *
   * Tangible content. Empty group on haiticss. Organize and put your
   * content here. A proposal on how to organize your content could be:
   *
   * components ................. Abstract named components
   * widgets .................... Data and business driven components
   * templates .................. Template layouts
   * renderings ................. Concrete include meta.load-css( cases of components and widgets
   * pages ...................... Concrete include meta.load-css( cases of templates */

  @include meta.load-css("components/components");

  /* -------------------------------------------------------------------------
   * OVERRIDES
   *
   * Safe belt scopes and utilities
   *
   * scopes ..................... Untrusted or corrupted sources under control
   * utilities .................. Helper classes with include meta.load-css(ant statements */

  @include meta.load-css("utilities/utilities");
}
