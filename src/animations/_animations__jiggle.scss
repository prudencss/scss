@use "sass:map";
@import "../foundations/foundations__durations";
@import "../foundations/foundations__easings";

/* -------------------------------------------------------------------------
 * REVEAL SLIDE
 *
 * Squash and transform back to original shape with ease-in-out
 *
 * Params:
 * DURATION ........................... Animation duration
 * DIRECTION .......................... Saquash axis (horizontal, vertical) */

// Animation variables
// --------------------------------------------------

// Animation toggling

$a-jiggle--enabled: true !default;

// Animation Params

$a-jiggle__duration: $f-duration !default;
$a-jiggle__direction: "horizontal" !default;
$a-jiggle__easing-in: $f-easing--anticipate !default;
$a-jiggle__easing-out: $f-easing--excite !default;

// Modifiers durations

$a-jiggle__mod-durations--enabled: true !default;
$a-jiggle__mod-durations: $f-durations !default;

// Modifiers directions

$a-jiggle__mod-directions--enabled: true !default;
$a-jiggle__mod-directions: "horizontal", "vertical" !default;

// Helper functions
// --------------------------------------------------

@function a-jiggle__direction-to-transform($_direction: "horizontal") {
  $_directions-transforms: (
    "horizontal": scale3d(0.67, 1.618, 1),
    "vertical": scale3d(1.618, 0.67, 1)
  );

  @if not map.has-key($_directions-transforms, $_direction) {
    @error "a-jiggle__direction-to-transform: `#{$_direction}` is not one of the allowed directions.";
  }

  @return map.get($_directions-transforms, $_direction);
}

// Animation as a mixin
// --------------------------------------------------

@mixin a-jiggle($_duration: $a-jiggle__duration) {
  transform: none;
  transition-property: transform;
  transition-duration: $_duration;
  transition-timing-function: $a-jiggle__easing-out;
}

@mixin a-jiggle--in($_direction: $a-jiggle__direction) {
  transform: a-jiggle__direction-to-transform($_direction);
  transition-timing-function: $a-jiggle__easing-in;
}

@mixin a-jiggle--keyframes($_duration: $a-jiggle__duration) {
  animation-name: a-jiggle__animation;
  animation-duration: $_duration;
  animation-timing-function: $a-jiggle__easing-out;
}

// Animation selector output
// --------------------------------------------------

@if $a-jiggle--enabled {
  @keyframes a-jiggle__animation {
    from {
      transform: a-jiggle__direction-to-transform($a-jiggle__direction);
    }

    to {
      transform: none;
    }
  }

  .a-jiggle {
    @include a-jiggle;

    &.in,
    &.action-on-mouse:hover,
    &.action-on-mouse:focus {
      @include a-jiggle--in;
    }
  }

  .a-jiggle--keyframes {
    &:active,
    &.in {
      @include a-jiggle--keyframes;
    }
  }
}

// Duration modifiers output
// --------------------------------------------------

@mixin a-jiggle__mod-duration($_duration-name: "normal", $_duration-value: $f-duration--normal) {
  .a-jiggle--duration-#{$_duration-name} {
    transition-duration: $_duration-value;
    animation-duration: $_duration-value;
  }
}

@if $a-jiggle--enabled and $a-jiggle__mod-durations--enabled {
  @each $_duration-name, $_duration-value in $a-jiggle__mod-durations {
    @include a-jiggle__mod-duration($_duration-name, $_duration-value);
  }
}

// Direction modifiers output
// --------------------------------------------------

@mixin a-jiggle__mod-direction($_direction-name: "horizontal") {
  .a-jiggle--direction-#{$_direction-name} {
    transform: a-jiggle__direction-to-transform($_direction-name);
  }
}

@if $a-jiggle--enabled and $a-jiggle__mod-directions--enabled {
  @each $_direction-name in $a-jiggle__mod-directions {
    @include a-jiggle__mod-direction($_direction-name);
  }
}

// Unset as mixin
// --------------------------------------------------

@mixin a-jiggle--unset {
  transform: initial;
  transition-property: initial;
  transition-duration: initial;
  transition-timing-function: initial;
  animation-name: initial;
  animation-duration: initial;
  animation-timing-function: initial;
}
